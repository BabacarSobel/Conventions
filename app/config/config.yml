imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: fr

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        types:
            json: Sonata\Doctrine\Types\JsonType


    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true


    
# vich uploader pour la gestion des uploads
vich_uploader:
    db_driver: orm    
    mappings:
        fichier:
            uri_prefix:         /files
            upload_destination: %kernel.root_dir%/../files
            inject_on_load:     true
            delete_on_update:   true
            delete_on_remove:   true
            
            
genemu_form:
    file:
        swf: /uploadify/uploadify.swf      
    date: ~
    image: ~
    select2:
        enabled: true
        configs:
            placeholder: Choisir une valeur
            width: element
            allowClear: false
            minimumInputLength: 0
            
# fos user : sécurité des utilisateurs    
fos_user:
    db_driver: orm
    firewall_name: main
    user_class: PC\UserBundle\Entity\User
    service:
        mailer: fos_user.mailer.twig_swift
    registration:
        form:
            type: pc_sonata_user_register
            validation_groups: [Register, Default, Registration]
        confirmation:
            enabled: false
            template: PCUserBundle:Registration:email.html.twig
    profile:
        form:
            type: fos_user_profile
            handler:            fos_user.profile.form.handler.default
            #validation_groups: [Profile, Default]
            validation_groups:  [Authentication]
    resetting:
        email:
            template: PCUserBundle:Resetting:email.html.twig
    group:
        group_class: PC\UserBundle\Entity\Group
    
            
# SONATA User Bundle : la gestion des utilisateurs par l'administrateur
sonata_user:
    security_acl: false
    manager_type: orm
    class:
        user: PC\UserBundle\Entity\User
        group: PC\UserBundle\Entity\Group
    impersonating:
        route: pc_home
    admin:
        user:
            class: PC\UserBundle\Admin\UserAdmin
            controller: SonataAdminBundle:CRUD
            translation: SonataUserBundle
    profile:  # Profile Form (firstname, lastname, etc ...)
        form:
            type:               sonata_user_profile
            handler:            sonata.user.profile.form.handler.default
            name:               sonata_user_profile_form
            validation_groups:  [Profile]
            
sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.admin.block.admin_list:
            contexts: [admin]
        sonata.block.service.text: ~
        sonata.block.service.action: ~
        sonata.block.service.rss: ~
        sonata.admin.block.search_result: ~
        sonata.user.block.menu:    # used to display the menu in profile pages
        sonata.user.block.account: # used to display menu option (login option)